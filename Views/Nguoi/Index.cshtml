@model IEnumerable<HemisCB.Models.TbNguoi>

@{
    ViewData["Title"] = "Người";
}

@section Heads{
    <link href="https://cdn.datatables.net/v/dt/jq-3.7.0/dt-2.1.7/r-3.0.3/datatables.min.css" rel="stylesheet">
    <style>
        a:visited, a:link, a:hover {
            text-decoration: none;
            color: inherit;
        }
        #views {
            border-collapse: collapse;
            border: 2px solid #ddd;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);
        }
        #views th, td{
            border-bottom: 2px solid #ddd;
        }
        .dtr-modal table {
            width: 100%;
        }
    </style>
}

<h1 class="text-center">Danh sách người trong cơ sở dữ liệu</h1>

<table id="views" class="table table-striped table-light nowrap">
    <thead class="">
        <tr>
            <th class="_nonorder"></th>
            <th>
                STT
            </th>
            <th>
               @*  @Html.DisplayNameFor(model => model.name) *@
            </th>
            <th>
               GIỚI TÍNH 
            </th>
            <th>
                NGÀY SINH 
            </th>
            <th>
              QUỐC TỊCH 
            </th>
            <th>
               DÂN TỘC 
            </th>
            <th>
               TÔN GIÁO 
            </th>
            <th>
                CHỨC DANH KHOA HỌC 
            </th>
            <th>
               SỐ CCCD 
            </th>
            <th>
                NGÀY CẤP CCCD 
            </th>
            <th>
                NƠI CẤP CCCD 
            </th>
            <th>
                NGÀY VÀO ĐOÀN 
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NgayVaoDang)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NgayVaoDangChinhThuc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NgayNhapNgu)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NgayXuatNgu)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdChuyenMonDaoTaoNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdGiaDinhChinhSachNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdKhungNangLucNgoaiNgucNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdNgoaiNguNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdThuongBinhHangNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdTrinhDoDaoTaoNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdTrinhDoLyLuanChinhTriNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdTrinhDoQuanLyNhaNuocNavigation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdTrinhDoTinHocNavigation)
            </th>
            <th class="_nonorder">Hành động</th>
        </tr>
    </thead>
    <tbody>
        @{
            int dem = 0;
        }
        @foreach (var item in Model) {
            dem++;
            <tr>
            <td></td>
            <td>
                @dem
            </td>
            <td>
              @*   @Html.DisplayFor(modelItem => item.name) *@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdGioiTinhNavigation!.GioiTinh)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NgaySinh)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdQuocTichNavigation!.TenNuoc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdDanTocNavigation!.DanToc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdTonGiaoNavigation!.TonGiao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdChucDanhKhoaHocNavigation!.ChucDanhKhoaHoc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SoCccd)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NgayCapCccd)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NoiCapCccd)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NgayVaoDoan)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NgayVaoDang)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NgayVaoDangChinhThuc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NgayNhapNgu)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NgayXuatNgu)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdChuyenMonDaoTaoNavigation!.NganhDaoTao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdGiaDinhChinhSachNavigation!.HoGiaDinhChinhSach)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdKhungNangLucNgoaiNgucNavigation!.TenKhungNangLucNgoaiNgu)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdNgoaiNguNavigation!.NgoaiNgu)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdThuongBinhHangNavigation!.HangThuongBinh)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdTrinhDoDaoTaoNavigation!.TrinhDoDaoTao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdTrinhDoLyLuanChinhTriNavigation!.TenTrinhDoLyLuanChinhTri)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdTrinhDoQuanLyNhaNuocNavigation!.TrinhDoQuanLyNhaNuoc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdTrinhDoTinHocNavigation!.TrinhDoTinHoc)
            </td>
            <td>
                    <button class="btn btn-primary" onclick="window.location.href = '@Url.Action("Edit", new {id = item.IdNguoi})'"><i class="fa-sharp-duotone fa-solid fa-user-pen"></i> Sửa</button>
                    <button class="btn btn-primary" onclick="window.location.href = '@Url.Action("Details", new {id = item.IdNguoi})'"><i class="fa-sharp fa-solid fa-circle-info"></i> Chi tiết</button>
                    <button class="btn btn-danger" onclick="window.location.href = '@Url.Action("Delete", new {id = item.IdNguoi})'"><i class="fa-solid fa-trash"></i> Xóa</button>
            </td>
        </tr>
}
    </tbody>
</table>
@section Scripts {
    <script src="~/js/import_excel.js"></script>
    <script src="~/js/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/v/dt/jszip-3.10.1/dt-2.1.8/b-3.1.2/b-colvis-3.1.2/b-html5-3.1.2/b-print-3.1.2/r-3.0.3/datatables.min.js"></script>
    <script src="https://kit.fontawesome.com/5c202d0407.js" crossorigin="anonymous"></script>
    <script>
        //Datatable trong datatable.net. Tìm hiểu thêm thông tin: https://datatables.net/manual/
        var table = new DataTable("#views", {
            columnDefs: [
                {
                    className: 'dtr-control',
                    targets: 0
                },
                {
                    orderable: false,
                    targets: '._nonorder'
                },
                {
                    responsivePriority: 0,
                    targets: -1
                }
            ],
            order: [1, 'asc'],
            responsive: {
                details: {
                    display: DataTable.Responsive.display.modal({
                        header: function (row) {
                            var data = row.data();
                            return 'Thông tin của ' + data[2];
                        }
                    }),
                    renderer: function (api, rowIdx, columns) {
                        var data = $.map(columns, function (col, i) {
                            return col.hidden
                                ? `<tr><td class="p-3">${col.title}</td><td class="p-3">${col.data}</td></tr>`
                                : '';
                        }).join('');
                        return data ? $('<table/>').append(data) : false;
                    }
                }
            },
            language: {
                //Điều chỉnh phần hiển thị label của thanh tìm kiếm - Xem thêm thông tin: https://datatables.net/reference/option/language.search
                search: "Tìm kiếm",
                //Điều chỉnh phần hiển thị thông tin của table - Xem thêm thông tin: https://datatables.net/reference/option/language.info
                info: "Tổng cộng _TOTAL_ bản ghi",
                zeroRecords: "Không tìm thấy bản ghi nào"

            },
            createdRow: (row, data, index) => {
            },
            layout: {//Layout: https://datatables.net/examples/layout/index.html
                topStart: {
                    buttons: [//extension buttons: https://datatables.net/extensions/buttons/config
                        {
                            className: 'btn btn-primary', //Thêm class cho button
                            text: 'Thêm người',
                            action: function (e, dt, node, config) {//Hành động của button
                                window.location.href = '@Url.Action("Create")';
                            }
                        },
                        {
                            extend: "excel",
                            className: 'btn btn-primary', //Thêm class cho button
                            text: 'Xuất excel',
                            exportOptions: {
                                columns: function(idx, data, node) {
                                    if (node.classList.contains("_nonorder")) return false;
                                    return true;
                                }

                            }
                        }
                    ]
                }
            }
        });
    </script>
}